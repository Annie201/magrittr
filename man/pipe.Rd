% Generated by roxygen2 (4.0.0): do not edit by hand
\name{pipe}
\alias{\%>\%}
\alias{pipe}
\title{Function to create a pipe operator.}
\usage{
pipe(tee = FALSE)

lhs \%>\% rhs
}
\arguments{
  \item{tee}{Either a logical or a function.}

  \item{lhs}{That which is to be piped}

  \item{rhs}{the pipe to be stuffed with tobacco.}
}
\value{
When tee is FALSE a standard pipe is returned. When tee is TRUE
  a tee is returned, i.e. the rhs is used for the side-effect and the
  the tee passes on the left-hand side. When tee is a function, the return
  value is a pipe where the function is attached as a side-effect, i.e. it
  works like a pipe, but also evaluates the function with the left-hand side
  as argument.
}
\description{
Function to create a pipe operator.

The \code{\%>\%} operator pipes the left-hand side into an expression on the
right-hand side. The expression can contain a \code{.} as placeholder to
indicate the position taken by the object in the pipeline. If not present,
it will be squeezed in as the first argument. If the right-hand side
expression is a function call that takes only one argument, one can omit
parentheses and the \code{.}. Only the outmost call is matched against the
dot, which means that e.g. formulas can still use a dot which will not be
matched. Nested functions will not be matched either.
}
\details{
This is not exported.
}
\examples{
\dontrun{
library(dplyr)
library(Lahman)

Batting \%>\%
  group_by(playerID) \%>\%
  summarise(total = sum(G)) \%>\%
  arrange(desc(total)) \%>\%
  head(5)


iris \%>\%
  filter(Petal.Length > 5) \%>\%
  select(-Species) \%>\%
  colMeans

iris \%>\%
  aggregate(. ~ Species, ., mean)

rnorm(1000) \%>\% abs \%>\% sum
}
}

